[tool.poetry]
name = "telegram-manager-backend"
version = "0.1.0"
description = "FastAPI backend for Telegram Manager"
authors = ["Alexander Saratovcev"]
readme = "README.md"
packages = [
    { include = "app" }
]

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "^0.115.14"
uvicorn = {extras = ["standard"], version = "^0.35.0"}
sqlalchemy = "^2.0.41"
asyncpg = "^0.30.0"
pydantic-settings = "^2.10.1"
boto3 = "^1.39.3"
arq = "^0.26.3"
python-multipart = "^0.0.20"
greenlet = "^3.2.3"


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
ruff = "^0.12.2"
mypy = "^1.16.1"
pytest = "^8.4.1"
httpx = "^0.28.1"
pytest-asyncio = "^1.0.0"

[tool.poetry.scripts]
init-db = "scripts.init_db:main"

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py313"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
    "asyncpg",
]

ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--asyncio-mode=auto",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "asyncio: marks tests as async tests",
]

